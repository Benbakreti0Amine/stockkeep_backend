"""
Django settings for stockkeep project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
from decouple import config
import os
from dotenv import load_dotenv

from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-g$0b&&u=1*s#y#5oogp@z!@#6o3xo!hjuj$5s*of(t1l_d6si^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AUTH_USER_MODEL ='users.User'


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'rest_framework',
    'structure',
    'consommateur',
    'role',
    'drf_yasg',
    'corsheaders',
    'fournisseur',    
    'Service_Achat',
    'magasinier',
    'Responsable_structure',
    'directeur',
    'channels',
    'notifications',
    'fcm_django',

]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'magasinier.middleware.RequestMiddleware',
]

ROOT_URLCONF = 'stockkeep.urls'

REST_FRAMEWORK = {
    # "DEFAULT_PERMISSION_CLASSES": [
    #     "users.permissions.HasPermission",
    # ],
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.TokenAuthentication",
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=2),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "SIGNING_KEY": SECRET_KEY,
    "AUTH_HEADER_TYPES": ("Bearer",),
}


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'stockkeep.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
load_dotenv()

if 'SUPABASE_URL' in os.environ and 'SUPABASE_KEY' in os.environ:
    # Use Supabase settings
    SUPABASE_URL = os.environ['SUPABASE_URL']
    SUPABASE_KEY = os.environ['SUPABASE_KEY']

    # Configure Django database settings for Supabase PostgreSQL
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ['SUPABASE_DB_NAME'],      # Your Supabase database name
            'USER': os.environ['SUPABASE_DB_USER'],      # Your Supabase database user
            'PASSWORD': os.environ['SUPABASE_DB_PASSWORD'],  # Your Supabase database password
            'HOST': os.environ['SUPABASE_DB_HOST'],      # Your Supabase database host
            'PORT': os.environ['SUPABASE_DB_PORT'],      # Your Supabase database port
        }
    }
else:
    # Use default SQLite settings (you can customize these as needed)
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }


# load_dotenv()

# if 'SUPABASE_URL' in os.environ and 'SUPABASE_KEY' in os.environ:
#     # Use Supabase settings
#     SUPABASE_URL = os.environ['SUPABASE_URL']
#     SUPABASE_KEY = os.environ['SUPABASE_KEY']

#     # Configure Django database settings for Supabase PostgreSQL
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql',
#             'NAME': os.environ['SUPABASE_DB_NAME'],      # Your Supabase database name
#             'USER': os.environ['SUPABASE_DB_USER'],      # Your Supabase database user
#             'PASSWORD': os.environ['SUPABASE_DB_PASSWORD'],  # Your Supabase database password
#             'HOST': os.environ['SUPABASE_DB_HOST'],      # Your Supabase database host
#             'PORT': os.environ['SUPABASE_DB_PORT'],      # Your Supabase database port
#         }
#     }
# else:
#     # Use default SQLite settings (you can customize these as needed)
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.sqlite3',
#             'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#         }
#     }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'procodestockkeep@gmail.com'
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD")
EMAIL_PORT = 587
EMAIL_USE_TLS = True

FRONTEND_BASE_URL = os.getenv('FRONTEND_BASE_URL', 'http://localhost:5317')

CORS_ORIGIN_ALLOW_ALL = True 
CORS_ALLOW_CREDENTIALS = True 

# Actual directory user files go to
MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')

# URL used to access the media
MEDIA_URL = '/media/'

FCM_SERVER_KEY = config("FCM_SERVER_KEY")
